FROM python:3.9-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy original lecture_rag module (for RAG functionality)
COPY lecture_rag/ ./lecture_rag/

# Copy backend application
COPY backend/ .

# Create directories for data storage
RUN mkdir -p /app/data/vector_store

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/health/ || exit 1

# Set memory optimizations
ENV PYTORCH_TRANSFORMERS_CACHE=/tmp/transformers_cache
ENV HF_HOME=/tmp/hf_cache
ENV TRANSFORMERS_OFFLINE=0

# Run migrations and start server
CMD ["sh", "-c", "python manage.py makemigrations && python manage.py migrate && gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 1 --timeout 600 --max-requests 50 --max-requests-jitter 5 --worker-class sync --worker-tmp-dir /dev/shm"]